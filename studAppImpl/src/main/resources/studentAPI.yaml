openapi: 3.0.0
info:
  description: This is an API to query students
  version: "1.0.0"
  title: Student API
  contact:
    email: romuit02@hs-esslingen.de
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: guests
    description: Operations available to regular guests
paths:

  /students:
    get:
      tags:
        - admins
        - guests
      summary: lists all students
      operationId: listStudents
      description: |
            lists all students currently enrolled
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/student'
        '500':
          description: Internal Server error
    post:
      tags:
       - admins
      summary: Adds a new student to the system
      operationId: addStudent
      description: Adds a new student to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '201':
          description: Ressource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
        '409':
          description: an existing item already exists

  /student/{id}:
    get:
      tags:
        - admins
        - guests
      summary: returns student information by id
      operationId: getStudentById
      description: returns student information by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/student'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - admins
      summary: Updates a student in the system
      operationId: updateStudent
      description: Updates a student in the system
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: item updated
        '400':
          description: 'invalid input, object invalid'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
        description: student item to update
        
    patch:
      tags:
        - admins
      summary: Partial update of student information
      operationId: partialUpdateStudent
      description: Partial update of student information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: item updated
        '400':
          description: 'invalid input, object invalid'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
        description: student item to update
        
    delete:
      tags:
        - admins
      summary: Deletion of a student in the system
      operationId: studentDeletion
      description: Deletion of a student in the system
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: student deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
servers:
  - url: 'http://localhost:8080/v1'
components:
  schemas:
    student:
      type: object
      required:
        - id
        - name
        - age
        - enrolmentNumber
        - fieldOfStudy
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Lula Haverland
        age:
          type: integer
          format: int32
          example: 21
        enrolmentNumber:
          type: integer
          format: int32
          example: 732597
        fieldOfStudy:
          type: string
          example: Software Engineering
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string